"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The ExtraChannelOptionsMessenger model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/ExtraChannelOptionsMessenger
 * @version 9.4.5
 */
var ExtraChannelOptionsMessenger = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ExtraChannelOptionsMessenger</code>.
   * Messenger channel options.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/ExtraChannelOptionsMessenger
   */
  function ExtraChannelOptionsMessenger() {
    _classCallCheck(this, ExtraChannelOptionsMessenger);

    ExtraChannelOptionsMessenger.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(ExtraChannelOptionsMessenger, [{
    key: "getMessengerExtensions",
    value:
    /**
         * Returns For webview type actions, a boolean value indicating whether the URL should be loaded with Messenger Extensions enabled. [More info](https://developers.facebook.com/docs/messenger-platform/send-api-reference/url-button).
         * @return {Boolean}
         */
    function getMessengerExtensions() {
      return this.messenger_extensions;
    }
    /**
     * Sets For webview type actions, a boolean value indicating whether the URL should be loaded with Messenger Extensions enabled. [More info](https://developers.facebook.com/docs/messenger-platform/send-api-reference/url-button).
     * @param {Boolean} messengerExtensions For webview type actions, a boolean value indicating whether the URL should be loaded with Messenger Extensions enabled. [More info](https://developers.facebook.com/docs/messenger-platform/send-api-reference/url-button).
     */

  }, {
    key: "setMessengerExtensions",
    value: function setMessengerExtensions(messengerExtensions) {
      this['messenger_extensions'] = messengerExtensions;
    }
    /**
         * Returns For webview type actions, a string value indicating if the share button should be hidden. [More Info](https://developers.facebook.com/docs/messenger-platform/reference/buttons/url).
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/ExtraChannelOptionsMessenger.WebviewShareButtonEnum}
         */

  }, {
    key: "getWebviewShareButton",
    value: function getWebviewShareButton() {
      return this.webview_share_button;
    }
    /**
     * Sets For webview type actions, a string value indicating if the share button should be hidden. [More Info](https://developers.facebook.com/docs/messenger-platform/reference/buttons/url).
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/ExtraChannelOptionsMessenger.WebviewShareButtonEnum} webviewShareButton For webview type actions, a string value indicating if the share button should be hidden. [More Info](https://developers.facebook.com/docs/messenger-platform/reference/buttons/url).
     */

  }, {
    key: "setWebviewShareButton",
    value: function setWebviewShareButton(webviewShareButton) {
      this['webview_share_button'] = webviewShareButton;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>ExtraChannelOptionsMessenger</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/ExtraChannelOptionsMessenger} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/ExtraChannelOptionsMessenger} The populated <code>ExtraChannelOptionsMessenger</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ExtraChannelOptionsMessenger();

        if (data.hasOwnProperty('messenger_extensions')) {
          obj['messenger_extensions'] = _ApiClient["default"].convertToType(data['messenger_extensions'], 'Boolean');
        }

        if (data.hasOwnProperty('webview_share_button')) {
          obj['webview_share_button'] = _ApiClient["default"].convertToType(data['webview_share_button'], 'String');
        }
      }

      return obj;
    }
  }]);

  return ExtraChannelOptionsMessenger;
}();
/**
 * For webview type actions, a boolean value indicating whether the URL should be loaded with Messenger Extensions enabled. [More info](https://developers.facebook.com/docs/messenger-platform/send-api-reference/url-button).
 * @member {Boolean} messenger_extensions
 * @default false
 */


ExtraChannelOptionsMessenger.prototype['messenger_extensions'] = false;
/**
 * For webview type actions, a string value indicating if the share button should be hidden. [More Info](https://developers.facebook.com/docs/messenger-platform/reference/buttons/url).
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/ExtraChannelOptionsMessenger.WebviewShareButtonEnum} webview_share_button
 */

ExtraChannelOptionsMessenger.prototype['webview_share_button'] = undefined;
/**
 * Allowed values for the <code>webview_share_button</code> property.
 * @enum {String}
 * @readonly
 */

ExtraChannelOptionsMessenger['WebviewShareButtonEnum'] = {
  /**
   * value: "hide"
   * @const
   */
  "hide": "hide"
};
var _default = ExtraChannelOptionsMessenger;
exports["default"] = _default;