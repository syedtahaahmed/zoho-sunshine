"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _Client = _interopRequireDefault(require("./Client"));

var _Links = _interopRequireDefault(require("./Links"));

var _Meta = _interopRequireDefault(require("./Meta"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The ClientListResponse model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/ClientListResponse
 * @version 9.4.5
 */
var ClientListResponse = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ClientListResponse</code>.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/ClientListResponse
   */
  function ClientListResponse() {
    _classCallCheck(this, ClientListResponse);

    ClientListResponse.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(ClientListResponse, [{
    key: "getClients",
    value:
    /**
         * Returns List of returned clients.
         * @return {Array.<module:sunshine-conversations-client/sunshine-conversations-client.model/Client>}
         */
    function getClients() {
      return this.clients;
    }
    /**
     * Sets List of returned clients.
     * @param {Array.<module:sunshine-conversations-client/sunshine-conversations-client.model/Client>} clients List of returned clients.
     */

  }, {
    key: "setClients",
    value: function setClients(clients) {
      this['clients'] = clients;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Meta}
         */

  }, {
    key: "getMeta",
    value: function getMeta() {
      return this.meta;
    }
    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Meta} meta
     */

  }, {
    key: "setMeta",
    value: function setMeta(meta) {
      this['meta'] = meta;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Links}
         */

  }, {
    key: "getLinks",
    value: function getLinks() {
      return this.links;
    }
    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Links} links
     */

  }, {
    key: "setLinks",
    value: function setLinks(links) {
      this['links'] = links;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>ClientListResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/ClientListResponse} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/ClientListResponse} The populated <code>ClientListResponse</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ClientListResponse();

        if (data.hasOwnProperty('clients')) {
          obj['clients'] = _ApiClient["default"].convertToType(data['clients'], [_Client["default"]]);
        }

        if (data.hasOwnProperty('meta')) {
          obj['meta'] = _Meta["default"].constructFromObject(data['meta']);
        }

        if (data.hasOwnProperty('links')) {
          obj['links'] = _Links["default"].constructFromObject(data['links']);
        }
      }

      return obj;
    }
  }]);

  return ClientListResponse;
}();
/**
 * List of returned clients.
 * @member {Array.<module:sunshine-conversations-client/sunshine-conversations-client.model/Client>} clients
 */


ClientListResponse.prototype['clients'] = undefined;
/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/Meta} meta
 */

ClientListResponse.prototype['meta'] = undefined;
/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/Links} links
 */

ClientListResponse.prototype['links'] = undefined;
var _default = ClientListResponse;
exports["default"] = _default;