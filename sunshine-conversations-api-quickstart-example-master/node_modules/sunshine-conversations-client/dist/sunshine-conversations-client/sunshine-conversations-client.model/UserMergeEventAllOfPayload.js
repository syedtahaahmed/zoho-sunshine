"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _UserMergeEventAllOfPayloadMergedConversations = _interopRequireDefault(require("./UserMergeEventAllOfPayloadMergedConversations"));

var _UserMergeEventAllOfPayloadMergedUsers = _interopRequireDefault(require("./UserMergeEventAllOfPayloadMergedUsers"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The UserMergeEventAllOfPayload model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload
 * @version 9.4.5
 */
var UserMergeEventAllOfPayload = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>UserMergeEventAllOfPayload</code>.
   * The payload of the event. The contents of this object depend on the type of event.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload
   */
  function UserMergeEventAllOfPayload() {
    _classCallCheck(this, UserMergeEventAllOfPayload);

    UserMergeEventAllOfPayload.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(UserMergeEventAllOfPayload, [{
    key: "getMergedUsers",
    value:
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedUsers}
         */
    function getMergedUsers() {
      return this.mergedUsers;
    }
    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedUsers} mergedUsers
     */

  }, {
    key: "setMergedUsers",
    value: function setMergedUsers(mergedUsers) {
      this['mergedUsers'] = mergedUsers;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedConversations}
         */

  }, {
    key: "getMergedConversations",
    value: function getMergedConversations() {
      return this.mergedConversations;
    }
    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedConversations} mergedConversations
     */

  }, {
    key: "setMergedConversations",
    value: function setMergedConversations(mergedConversations) {
      this['mergedConversations'] = mergedConversations;
    }
    /**
         * Returns A flat object with the set of metadata properties that were discarded when merging the two users. This should contain values only if the combined metadata fields exceed the 4KB limit.
         * @return {Object}
         */

  }, {
    key: "getDiscardedMetadata",
    value: function getDiscardedMetadata() {
      return this.discardedMetadata;
    }
    /**
     * Sets A flat object with the set of metadata properties that were discarded when merging the two users. This should contain values only if the combined metadata fields exceed the 4KB limit.
     * @param {Object} discardedMetadata A flat object with the set of metadata properties that were discarded when merging the two users. This should contain values only if the combined metadata fields exceed the 4KB limit.
     */

  }, {
    key: "setDiscardedMetadata",
    value: function setDiscardedMetadata(discardedMetadata) {
      this['discardedMetadata'] = discardedMetadata;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>UserMergeEventAllOfPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload} The populated <code>UserMergeEventAllOfPayload</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new UserMergeEventAllOfPayload();

        if (data.hasOwnProperty('mergedUsers')) {
          obj['mergedUsers'] = _UserMergeEventAllOfPayloadMergedUsers["default"].constructFromObject(data['mergedUsers']);
        }

        if (data.hasOwnProperty('mergedConversations')) {
          obj['mergedConversations'] = _UserMergeEventAllOfPayloadMergedConversations["default"].constructFromObject(data['mergedConversations']);
        }

        if (data.hasOwnProperty('discardedMetadata')) {
          obj['discardedMetadata'] = _ApiClient["default"].convertToType(data['discardedMetadata'], Object);
        }
      }

      return obj;
    }
  }]);

  return UserMergeEventAllOfPayload;
}();
/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedUsers} mergedUsers
 */


UserMergeEventAllOfPayload.prototype['mergedUsers'] = undefined;
/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedConversations} mergedConversations
 */

UserMergeEventAllOfPayload.prototype['mergedConversations'] = undefined;
/**
 * A flat object with the set of metadata properties that were discarded when merging the two users. This should contain values only if the combined metadata fields exceed the 4KB limit.
 * @member {Object} discardedMetadata
 */

UserMergeEventAllOfPayload.prototype['discardedMetadata'] = undefined;
var _default = UserMergeEventAllOfPayload;
exports["default"] = _default;