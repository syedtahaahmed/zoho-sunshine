"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The MatchCriteriaMailgunAllOf model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/MatchCriteriaMailgunAllOf
 * @version 9.4.5
 */
var MatchCriteriaMailgunAllOf = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>MatchCriteriaMailgunAllOf</code>.
   * The set of criteria used to determine the user&#39;s identity on a third-party channel.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/MatchCriteriaMailgunAllOf
   * @param address {String} The user’s email address.
   */
  function MatchCriteriaMailgunAllOf(address) {
    _classCallCheck(this, MatchCriteriaMailgunAllOf);

    MatchCriteriaMailgunAllOf.initialize(this, address);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(MatchCriteriaMailgunAllOf, [{
    key: "getType",
    value:
    /**
         * Returns The channel type.
         * @return {String}
         */
    function getType() {
      return this.type;
    }
    /**
     * Sets The channel type.
     * @param {String} type The channel type.
     */

  }, {
    key: "setType",
    value: function setType(type) {
      this['type'] = type;
    }
    /**
         * Returns The user’s email address.
         * @return {String}
         */

  }, {
    key: "getAddress",
    value: function getAddress() {
      return this.address;
    }
    /**
     * Sets The user’s email address.
     * @param {String} address The user’s email address.
     */

  }, {
    key: "setAddress",
    value: function setAddress(address) {
      this['address'] = address;
    }
    /**
         * Returns May be specified to set the subject for the outgoing email.
         * @return {String}
         */

  }, {
    key: "getSubject",
    value: function getSubject() {
      return this.subject;
    }
    /**
     * Sets May be specified to set the subject for the outgoing email.
     * @param {String} subject May be specified to set the subject for the outgoing email.
     */

  }, {
    key: "setSubject",
    value: function setSubject(subject) {
      this['subject'] = subject;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj, address) {
      obj['address'] = address;
    }
    /**
     * Constructs a <code>MatchCriteriaMailgunAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/MatchCriteriaMailgunAllOf} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/MatchCriteriaMailgunAllOf} The populated <code>MatchCriteriaMailgunAllOf</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new MatchCriteriaMailgunAllOf();

        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }

        if (data.hasOwnProperty('address')) {
          obj['address'] = _ApiClient["default"].convertToType(data['address'], 'String');
        }

        if (data.hasOwnProperty('subject')) {
          obj['subject'] = _ApiClient["default"].convertToType(data['subject'], 'String');
        }
      }

      return obj;
    }
  }]);

  return MatchCriteriaMailgunAllOf;
}();
/**
 * The channel type.
 * @member {String} type
 * @default 'mailgun'
 */


MatchCriteriaMailgunAllOf.prototype['type'] = 'mailgun';
/**
 * The user’s email address.
 * @member {String} address
 */

MatchCriteriaMailgunAllOf.prototype['address'] = undefined;
/**
 * May be specified to set the subject for the outgoing email.
 * @member {String} subject
 * @default 'New message from {appName}'
 */

MatchCriteriaMailgunAllOf.prototype['subject'] = 'New message from {appName}';
var _default = MatchCriteriaMailgunAllOf;
exports["default"] = _default;