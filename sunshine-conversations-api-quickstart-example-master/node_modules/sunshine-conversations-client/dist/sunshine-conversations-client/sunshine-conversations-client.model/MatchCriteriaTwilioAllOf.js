"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The MatchCriteriaTwilioAllOf model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/MatchCriteriaTwilioAllOf
 * @version 9.4.5
 */
var MatchCriteriaTwilioAllOf = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>MatchCriteriaTwilioAllOf</code>.
   * The set of criteria used to determine the user&#39;s identity on a third-party channel.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/MatchCriteriaTwilioAllOf
   * @param phoneNumber {String} The user’s phone number. It must contain the + prefix and the country code. Examples of valid phone numbers: +1 212-555-2368, +12125552368, +1 212 555 2368. Examples of invalid phone numbers: 212 555 2368, 1 212 555 2368. 
   */
  function MatchCriteriaTwilioAllOf(phoneNumber) {
    _classCallCheck(this, MatchCriteriaTwilioAllOf);

    MatchCriteriaTwilioAllOf.initialize(this, phoneNumber);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(MatchCriteriaTwilioAllOf, [{
    key: "getType",
    value:
    /**
         * Returns The channel type.
         * @return {String}
         */
    function getType() {
      return this.type;
    }
    /**
     * Sets The channel type.
     * @param {String} type The channel type.
     */

  }, {
    key: "setType",
    value: function setType(type) {
      this['type'] = type;
    }
    /**
         * Returns The user’s phone number. It must contain the + prefix and the country code. Examples of valid phone numbers: +1 212-555-2368, +12125552368, +1 212 555 2368. Examples of invalid phone numbers: 212 555 2368, 1 212 555 2368. 
         * @return {String}
         */

  }, {
    key: "getPhoneNumber",
    value: function getPhoneNumber() {
      return this.phoneNumber;
    }
    /**
     * Sets The user’s phone number. It must contain the + prefix and the country code. Examples of valid phone numbers: +1 212-555-2368, +12125552368, +1 212 555 2368. Examples of invalid phone numbers: 212 555 2368, 1 212 555 2368. 
     * @param {String} phoneNumber The user’s phone number. It must contain the + prefix and the country code. Examples of valid phone numbers: +1 212-555-2368, +12125552368, +1 212 555 2368. Examples of invalid phone numbers: 212 555 2368, 1 212 555 2368. 
     */

  }, {
    key: "setPhoneNumber",
    value: function setPhoneNumber(phoneNumber) {
      this['phoneNumber'] = phoneNumber;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj, phoneNumber) {
      obj['phoneNumber'] = phoneNumber;
    }
    /**
     * Constructs a <code>MatchCriteriaTwilioAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/MatchCriteriaTwilioAllOf} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/MatchCriteriaTwilioAllOf} The populated <code>MatchCriteriaTwilioAllOf</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new MatchCriteriaTwilioAllOf();

        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }

        if (data.hasOwnProperty('phoneNumber')) {
          obj['phoneNumber'] = _ApiClient["default"].convertToType(data['phoneNumber'], 'String');
        }
      }

      return obj;
    }
  }]);

  return MatchCriteriaTwilioAllOf;
}();
/**
 * The channel type.
 * @member {String} type
 * @default 'twilio'
 */


MatchCriteriaTwilioAllOf.prototype['type'] = 'twilio';
/**
 * The user’s phone number. It must contain the + prefix and the country code. Examples of valid phone numbers: +1 212-555-2368, +12125552368, +1 212 555 2368. Examples of invalid phone numbers: 212 555 2368, 1 212 555 2368. 
 * @member {String} phoneNumber
 */

MatchCriteriaTwilioAllOf.prototype['phoneNumber'] = undefined;
var _default = MatchCriteriaTwilioAllOf;
exports["default"] = _default;